esphome:
  name: "embed-remote"
  includes:
    - esphomeRemote/MenuGlobals.h
    - esphomeRemote/MenuTitle.h
    - esphomeRemote/FriendlyNameEntity.h
    - esphomeRemote/TextHelpers.h
    - esphomeRemote/esphomeRemotePlayer.h
    - esphomeRemote/esphomeRemoteService.h
    - esphomeRemote/esphomeRemoteLight.h
    - esphomeRemote/esphomeRemoteSwitch.h
    - esphomeRemote/esphomeRemoteSensor.h
    - esphomeRemote/DisplayUpdateInterface.h
    - esphomeRemote/esphomeRemote.h
    - esphomeRemote/esphomeRemoteRotary.h
    - esphomeRemote/esphomeRemoteCommon.h
    
  platformio_options:
    board_build.mcu: esp32s3
    board_build.name: "LilyGO T-Embed ESP32-S3"
    board_build.upload.flash_size: "16MB"
    board_build.upload.maximum_size: 16777216
    board_build.vendor: "LilyGO"
 
  on_boot:
  # Send the `SLPOUT` command as early as possible
    priority: 800
    then:
      - lambda: |-
          id(my_display).enable();
          id(my_display).transfer_byte(0x11);
          id(my_display).disable();
# Also, turn the lights on
      - switch.turn_on: power_on

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino

substitutions:
  boot_name: '"T-Embed <3"'
  friendly_name: "T-Embed Remote"
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  display_size_x: "320"
  large_font_size: "24"
  medium_font_size: "15"
  small_font_size: "14"
  icon_size: "18"
  icon_size_large: "19"
  header_height: "16"
  margin_size: "4"
  slider_margin_size: "6"
  scroll_bar_width: "6"
  bottom_bar_margin: "1"
  now_playing_max_lines: "5"
  draw_now_playing_menu: "false"
  draw_battery_level: "false"
  draw_volume_level: "false"
  draw_shuffle_disabled: "false"
  draw_header_time: "true"
  color_accent_primary_red: 0%
  color_accent_primary_green: 45%
  color_accent_primary_blue: 68%
  display_timeout: "16"
  sleep_after: "7200"
  menu_rollover_on: "true"
  sync_active_player: "false"
  dec_brightness_step: "10"
  inc_brightness_step: "10"
  dec_color_temperature_step: "10"
  inc_color_temperature_step: "10"
  dark_mode: "true"
  keep_states_in_sync: "true"

<<: !include esphomeRemote/sharedRemoteConfig.yaml

spi:
  clk_pin: GPIO12
  mosi_pin: GPIO11

switch:
  - platform: gpio
    pin:
      number: GPIO46
      mode:
        output: True
    name: "Power On"
    id: power_on
  - platform: gpio
    pin:
      number: GPIO15
      mode:
        output: True
    name: "Display Backlight"
    id: backlight
  - platform: template
    name: Sleep Toggle
    id: sleep_toggle
    optimistic: true
    on_turn_on:
      then:
        - deep_sleep.enter:
            id: deep_sleep_1

time:
  - platform: homeassistant
    id: esptime

display:
  - platform: st7789v
    model: CUSTOM
    id: my_display
    eightbitcolor: False
    rotation: 270
    width: 170
    height: 320
    offset_width: 0
    offset_height: 35
    backlight_pin: GPIO15
    cs_pin: GPIO10
    dc_pin: GPIO13
    reset_pin: GPIO9
    lambda: |-
      if (idleTime < 0) {
        ESP_LOGD("drawing menu", "turning on");
        id(backlight).turn_on();
        idleTime = 0;
      }

      drawMenu();
      return;

sensor:
  - platform: template
    name: Battery Percent
    id: batteryPercent
    unit_of_measurement: '%'
  - platform: rotary_encoder
    internal: True
    name: "Rotary Encoder"
    pin_a: GPIO02
    pin_b: GPIO01
    id: rotary
    on_clockwise:
      - lambda: |-
          buttonPressWakeUpDisplay();
          buttonPressNext();
    on_anticlockwise:
      - lambda: |-
          buttonPressWakeUpDisplay();
          buttonPressPrevious();

## Needed to debounce screen updates for rotary. 17ms is close to 60fps for st7789v
  - platform: template
    id: display_update_tick
    filters:
      - debounce: 17ms
    on_value :
      then:
        - lambda: |-
            displayUpdateDebounced();

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO00
      inverted: True
      mode:
        input: true
    name: "Rotary Button"
    internal: True
    id: sw1
    on_click:
      min_length: 5ms
      max_length: 350ms
      then:
      - lambda: |-
          buttonPressSelect();
    on_multi_click:
    - timing:
        - ON for at least 0.5s
      then:
      - lambda: |-
          buttonPressSelectHold();
